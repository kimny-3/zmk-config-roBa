#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <22 23>;
        };

        c_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        ctrl_a {
            bindings = <&kp LC(A)>;
            key-positions = <10 11>;
        };

        pageup {
            bindings = <&kp PAGE_UP>;
            key-positions = <8 9>;
        };

        pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <20 21>;
        };

        c_home {
            bindings = <&kp HOME>;
            key-positions = <6 7>;
        };

        c_end {
            bindings = <&kp END>;
            key-positions = <18 19>;
        };

        layer0 {
            bindings = <&mo 0>;
            key-positions = <27 26>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W      &kp E         &kp R            &kp T                                      &kp Y          &kp U  &lt 5 I    &kp O       &kp P
&mt RCTRL A       &kp S      &kp D         &kp F            &kp G      &kp LS(LG(S))      &kp AT_SIGN  &kp H          &kp J  &kp K      &kp L       &kp MINUS
&mt LEFT_SHIFT Z  &kp X      &kp C         &kp V            &lt 6 B    &mo 4              &kp DELETE   &kp N          &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp LEFT_SHIFT    &kp LCTRL  &kp LEFT_ALT  &lt 2 LA(GRAVE)  &lt 3 TAB  &lt 5 SPACE        &kp ENTER    &kp BACKSPACE                                &kp LEFT_WIN
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        Free {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SYMBOLE {
            bindings = <
&kp EXCLAMATION             &kp DOUBLE_QUOTES  &kp HASH      &kp PERCENT  &kp AMPERSAND                                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE      &kp CARET         &kp PIPE
&kp EQUAL                   &kp SLASH          &kp ASTERISK  &kp MINUS    &kp PLUS       &kp C_MUTE      &kp SQT        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN  &kp GREATER_THAN  &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1    &kp CARET     &kp TILDE    &kp GRAVE      &kp COLON       &kt SEMICOLON  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COMMA      &kp PERIOD        &kp BACKSLASH
&kt CAPSLOCK                &trans             &trans        &trans       &trans         &trans          &trans         &trans                                                                        &kp UNDERSCORE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp N7        &kp N8        &kp NUMBER_9  &kp SLASH   &kp ASTERISK
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans      &kp MINUS
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp PLUS
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans          &trans     &kp UP_ARROW  &trans         &trans                      &trans  &kp PAGE_UP    &mkp MB5  &kp HOME  &trans
&kp LC(A)       &kp LEFT   &kp DOWN      &kp RIGHT      &trans  &trans      &trans  &trans  &mkp MB1       &mkp MB3  &mkp MB2  &trans
&kp LEFT_SHIFT  &kp LC(X)  &kp LC(C)     &kp LC(RIGHT)  &trans  &none       &trans  &trans  &kp PAGE_DOWN  &mkp MB4  &kp END   &trans
&trans          &trans     &trans        &trans         &mo 0   &mo 0       &trans  &trans                                     &trans
            >;
        };

        Function+Scroll {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                      &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
